"""
Django settings for artmagic project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(os.path.join(BASE_DIR, '.env'))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',

    'mptt',
    'corsheaders',
    'rest_framework',
    'django_filters',
    'django_ckeditor_5',


    'products',
    'users',
    'carts',
    'delivery',
    'liqpay_app',    
    'main',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    
]

ROOT_URLCONF = 'artmagic.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'products.context_processors.current_categories',
                'main.magic_file.header',
            ],
        },
    },
]

WSGI_APPLICATION = 'artmagic.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DATABASE_NAME'),
        'USER': os.getenv('DATABASE_USER'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD'),
        'HOST': os.getenv('DATABASE_HOST'),
        'PORT': os.getenv('DATABASE_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



NOVA_POSHTA_API_KEY = os.getenv('NOVA_POSHTA_API_KEY')
LIQPAY_PUBLIC_KEY = os.getenv('LIQPAY_PUBLIC_KEY')
LIQPAY_PRIVATE_KEY = os.getenv('LIQPAY_PRIVATE_KEY')

# Настройки для Celery
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Europe/Kiev'



# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/


LANGUAGE_CODE = 'uk'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'users.CustomUser'
# LOGIN_URL = '/user/login/'

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


MPTT_ADMIN_LEVEL_INDENT = 25



EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')


import mimetypes
mimetypes.add_type("application/javascript", ".js", True)

if DEBUG:
    import mimetypes
    mimetypes.add_type("application/javascript", ".mjs", True)

if DEBUG:
    import mimetypes
    mimetypes.add_type("application/javascript", ".min.js", True)

if DEBUG:
    import mimetypes
    mimetypes.add_type("text/css", ".css", True)

# CORS_ALLOWED_ORIGINS = ["http://localhost:8000", "http://127.0.0.1:8000"]
CORS_ALLOWED_ORIGINS = os.getenv('CORS_ALLOWED_ORIGINS').split(',')

CORS_ALLOW_METHODS = (
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
)

CORS_ORIGIN_ALLOW_ALL=True


CSRF_TRUSTED_ORIGINS = os.getenv('CSRF_TRUSTED_ORIGINS').split(',')


customColorPalette = [
        {
            'color': 'hsl(4, 90%, 58%)',
            'label': 'Red'
        },
        {
            'color': 'hsl(340, 82%, 52%)',
            'label': 'Pink'
        },
        {
            'color': 'hsl(291, 64%, 42%)',
            'label': 'Purple'
        },
        {
            'color': 'hsl(262, 52%, 47%)',
            'label': 'Deep Purple'
        },
        {
            'color': 'hsl(231, 48%, 48%)',
            'label': 'Indigo'
        },
        {
            'color': 'hsl(207, 90%, 54%)',
            'label': 'Blue'
        },
    ]
CKEDITOR_5_CONFIGS = {
    'extends': {
        'toolbar': [
            'heading', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',
            'subscript', 'superscript', 'highlight', 'code', 'codeBlock', '|',
            'bulletedList', 'numberedList', 'todoList', '|',
            'blockQuote', 'imageUpload', 'mediaEmbed', '|',
            'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', '|',
            'outdent', 'indent', '|', 'insertTable', 'removeFormat', 'sourceEditing'
        ],
        'fontSize': {
            'options': [
                9, 11, 13, 15, 17, 19, 21, 'default', 25, 30  # Добавлены размеры шрифта
            ],
            'supportAllValues': True  # Поддержка всех значений размеров
        },
        'image': {
            'toolbar': [
                'imageTextAlternative', '|',
                'imageStyle:alignLeft', 'imageStyle:alignCenter', 'imageStyle:alignRight', '|',
                'imageStyle:side', '|', 'resizeImage'
            ],
            'styles': [
                'full', 'side', 'alignLeft', 'alignRight', 'alignCenter'
            ],
            'resizeUnit': '%',  # Включение изменения размера изображений в процентах
        },
        'table': {
            'contentToolbar': [
                'tableColumn', 'tableRow', 'mergeTableCells', '|',
                'tableProperties', 'tableCellProperties'
            ],
            'tableProperties': {
                'borderColors': customColorPalette,  # Пользовательские цвета границ
                'backgroundColors': customColorPalette  # Пользовательские фоны для таблиц
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            }
        },
        'heading': {
            'options': [
                { 'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph' },
                { 'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1' },
                { 'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2' },
                { 'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3' }
            ]
        },
        'fontFamily': {
            'options': ['default', 'Arial, Helvetica, sans-serif', 'Courier New, Courier, monospace', 'Georgia, serif'],
            'supportAllValues': True
        },
        'fontColor': {
            'colors': [
                {'color': 'hsl(0, 0%, 0%)', 'label': 'Black'},
                {'color': 'hsl(0, 0%, 30%)', 'label': 'Dim gray'},
                {'color': 'hsl(0, 0%, 60%)', 'label': 'Gray'},
                {'color': 'hsl(0, 0%, 90%)', 'label': 'Light gray'},
                {'color': 'hsl(0, 0%, 100%)', 'label': 'White'},
            ],
            'columns': 5
        },
        'fontBackgroundColor': {
            'colors': [
                {'color': 'hsl(120, 75%, 60%)', 'label': 'Green'},
                {'color': 'hsl(360, 75%, 60%)', 'label': 'Red'},
                {'color': 'hsl(60, 75%, 60%)', 'label': 'Yellow'},
            ],
            'columns': 5
        },
        'highlight': {
            'options': [
                {'model': 'yellowMarker', 'class': 'marker-yellow', 'title': 'Yellow marker', 'color': 'var(--ck-highlight-marker-yellow)', 'type': 'marker'},
                {'model': 'greenMarker', 'class': 'marker-green', 'title': 'Green marker', 'color': 'var(--ck-highlight-marker-green)', 'type': 'marker'},
                {'model': 'pinkMarker', 'class': 'marker-pink', 'title': 'Pink marker', 'color': 'var(--ck-highlight-marker-pink)', 'type': 'marker'},
                {'model': 'redPen', 'class': 'pen-red', 'title': 'Red pen', 'color': 'var(--ck-highlight-pen-red)', 'type': 'pen'},
                {'model': 'bluePen', 'class': 'pen-blue', 'title': 'Blue pen', 'color': 'var(--ck-highlight-pen-blue)', 'type': 'pen'},
            ]
        },
        'list': {
            'properties': {
                'styles': True,
                'startIndex': True,
                'reversed': True
            }
        },
        'mediaEmbed': {
            'previewsInData': True  # Включить предпросмотр встроенных медиа
        },
        'removePlugins': ['CKFinderUploadAdapter'],  # Отключить CKFinder
        'height': 600,  # Высота редактора
        'width': '100%'  # Ширина редактора
    }
}

# Пользовательская цветовая палитра для таблиц
customColorPalette = [
    {'color': 'hsl(0, 75%, 60%)', 'label': 'Red'},
    {'color': 'hsl(30, 75%, 60%)', 'label': 'Orange'},
    {'color': 'hsl(60, 75%, 60%)', 'label': 'Yellow'},
    {'color': 'hsl(120, 75%, 60%)', 'label': 'Green'},
    {'color': 'hsl(180, 75%, 60%)', 'label': 'Cyan'},
    {'color': 'hsl(240, 75%, 60%)', 'label': 'Blue'},
    {'color': 'hsl(300, 75%, 60%)', 'label': 'Purple'},
    # Добавить больше пользовательских цветов при необходимости
]

# Установить ограничения на загрузку файлов
CKEDITOR_5_FILE_UPLOAD_PERMISSION = "staff"  # "staff", "authenticated", "any"